#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..."

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

if [ -z "$install_dir" ]; then	# Si install_dir n'est pas renseigné dans app setting
#REMOVEME? 	install_dir=/var/www/$app
#REMOVEME? 	ynh_app_setting_set $app install_dir $install_dir
fi

if [ -z "$db_name" ]; then	# Si db_name n'est pas renseigné dans app setting
	db_name=$(ynh_sanitize_dbid $app)
#REMOVEME? 	ynh_app_setting_set $app db_name $db_name
fi

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir"
	# Do not delete the install directory. Keep it for the manual upgrade process...
#REMOVEME? 	# ynh_secure_remove "$install_dir/install"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..."

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config
#REMOVEME? phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE TP.CONFIG.PHP FILE
#=================================================
ynh_script_progression --message="Updating tp.config.php file..."

# The file tp.config.php is a dump of the admin part of the database.
tp_config_file="$install_dir/includes/config/tp.config.php"

echo "<?php
global \$SETTINGS;
\$SETTINGS = array (" > $tp_config_file

while read settings
do
	echo -n "    '$(echo $settings | awk '{ print $1 }')'" >> $tp_config_file
	echo " => '$(echo $settings | cut -d' ' -f2-)'," >> $tp_config_file
done <<< "$(ynh_mysql_execute_as_root "SELECT intitule, valeur FROM teampass_misc" $app)"
echo ");" >> $tp_config_file

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

ynh_add_config --template="../conf/settings.php" --destination="$install_dir/includes/config/settings.php"

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	# Move settings.php from old teampass version
	if [ ! -e "$install_dir/includes/config/settings.php" ]
	then
		mv "$install_dir/includes/settings.php" "$install_dir/includes/config/settings.php"
	fi

	# Create csrfp.config.php
	if [ ! -e "$install_dir/includes/libraries/csrfp/libs/csrfp.config.php" ]
	then
		cp $install_dir/includes/libraries/csrfp/libs/csrfp.config.sample.php $install_dir/includes/libraries/csrfp/libs/csrfp.config.php	# Créer le fichier de config de csrfp
		ynh_replace_string "CSRFP_TOKEN\" => \"" "&$(head -n40 /dev/urandom | tr -c -d 'a-f0-9' | head -c50)" $install_dir/includes/libraries/csrfp/libs/csrfp.config.php	# Renseigne un token, valide en hexadécimal
		ynh_replace_string "jsUrl\" => \"" "&includes/libraries/csrfp/js/csrfprotector.js" $install_dir/includes/libraries/csrfp/libs/csrfp.config.php	# Renseigne l'adresse de csrfprotector.js
	fi

	# Run database upgrades
	# Upgrade to 2.1.23.4
	#ynh_mysql_execute_as_root "ALTER TABLE teampass_misc ADD id INT(12) NOT NULL AUTO_INCREMENT FIRST, ADD PRIMARY KEY (id);" $app >&2
	# Upgrade to 2.1.24.4
	#ynh_mysql_execute_as_root "ALTER TABLE teampass_items CHANGE pw_len pw_len INT(5) NOT NULL DEFAULT '0';" $app >&2
	# Upgrade to 2.1.25.2
	#ynh_mysql_execute_as_root "INSERT INTO teampass_misc (id, type, intitule, valeur) VALUES (NULL, 'admin', 'encryption_protocol', 'ctr');" $app >&2
	# Upgrade to 2.1.27.x
	#ynh_mysql_execute_as_root "ALTER TABLE teampass_misc CHANGE id increment_id INT(12) NOT NULL AUTO_INCREMENT;" $app >&2
fi

#=================================================
# CREATE A CRON FILE FOR AN AUTOMATIC BACKUP
#=================================================
ynh_script_progression --message="Creating a cron file for an automatic backup..."

echo "0 0 * * 0 $app cd $install_dir/backups && php script.backup.php" > /etc/cron.d/$app

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

# Les fichiers appartiennent à root
chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

# Sauf certains dossiers includes, install, files et upload
chown -R $app $install_dir/{includes,files,upload}
if [ -d "$install_dir/install" ]; then
	chown -R $app "$install_dir/install"
fi

# Restreint l'accès au dossier de backup
mkdir -p $install_dir/backups
chmod 750 $install_dir/backups

#=================================================
# GENERIC FINALISATION
#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
